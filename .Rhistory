wd()
getwd()
getwd()
health <- read.csv("heart_disease_health_indicators.csv")
health <- health %>% mutate(
HeartDiseaseorAttack = as.factor(HeartDiseaseorAttack),
HighBP = as.factor(HighBP),
HighChol = as.factor(HighChol),
CholCheck = as.factor(CholCheck),
ln.BMI = log(BMI),
Smoker = as.factor(Smoker),
Stroke = as.factor(Stroke),
Diabetes = as.factor(Diabetes),
PhysActivity = as.factor(PhysActivity),
Fruits = as.factor(Fruits),
Veggies = as.factor(Veggies),
HvyAlcoholConsump = as.factor(HvyAlcoholConsump),
AnyHealthcare = as.factor(AnyHealthcare),
NoDocbcCost = as.factor(NoDocbcCost),
GenHlth = as.factor(GenHlth),
ln.MentHlth = log(MentHlth + 1), # Probably shouldn't use
bin.MentHlth = as.factor(ifelse(MentHlth == 0, 0, 1)),
fac.MentHlth = as.factor(MentHlth), # Probably shouldn't use
ln.PhysHlth = log(PhysHlth + 1), # Probably shouldn't use
bin.PhysHlth = as.factor(ifelse(PhysHlth == 0, 0, 1)),
fac.PhysHlth = as.factor(PhysHlth), # Probably shouldn't use
DiffWalk = as.factor(DiffWalk),
Sex = as.factor(ifelse(Sex == 0, "F", "M")),
Age = as.factor(Age),
Education = as.factor(Education),
Income = as.factor(Income)
)
## Libraries Needed
library(dplyr)
health <- health %>% mutate(
HeartDiseaseorAttack = as.factor(HeartDiseaseorAttack),
HighBP = as.factor(HighBP),
HighChol = as.factor(HighChol),
CholCheck = as.factor(CholCheck),
ln.BMI = log(BMI),
Smoker = as.factor(Smoker),
Stroke = as.factor(Stroke),
Diabetes = as.factor(Diabetes),
PhysActivity = as.factor(PhysActivity),
Fruits = as.factor(Fruits),
Veggies = as.factor(Veggies),
HvyAlcoholConsump = as.factor(HvyAlcoholConsump),
AnyHealthcare = as.factor(AnyHealthcare),
NoDocbcCost = as.factor(NoDocbcCost),
GenHlth = as.factor(GenHlth),
ln.MentHlth = log(MentHlth + 1), # Probably shouldn't use
bin.MentHlth = as.factor(ifelse(MentHlth == 0, 0, 1)),
fac.MentHlth = as.factor(MentHlth), # Probably shouldn't use
ln.PhysHlth = log(PhysHlth + 1), # Probably shouldn't use
bin.PhysHlth = as.factor(ifelse(PhysHlth == 0, 0, 1)),
fac.PhysHlth = as.factor(PhysHlth), # Probably shouldn't use
DiffWalk = as.factor(DiffWalk),
Sex = as.factor(ifelse(Sex == 0, "F", "M")),
Age = as.factor(Age),
Education = as.factor(Education),
Income = as.factor(Income)
)
## LDA ##
health_lda <- lda(HeartDiseaseorAttack ~ . , CV = TRUE, data = health)
library(MASS)
## LDA ##
health_lda <- lda(HeartDiseaseorAttack ~ . , CV = TRUE, data = health)
table(health$HeartDiseaseorAttack, health_lda$class)
library(verification)
## Class.Sum & Kappa ##
kappa=function(x){
n=sum(x)
pobs=(x[1,1]+x[2,2])/n
pexp=(sum(x[1,])*sum(x[,1])+sum(x[2,])*sum(x[,2]))/n^2
kappa=(pobs-pexp)/(1-pexp)
t1=0
t2=0
t3=0
pii=x/n
pidot=apply(pii,1,sum)
pdotj=apply(pii,2,sum)
for(i in 1:2){
t1 = t1 + pii[i,i]*((1-pexp) - (1-pobs)*(pidot[i]+pdotj[i]))^2
}
t2 = pii[1,2]*(pdotj[1]+pidot[2])^2 + pii[2,1]*(pdotj[2] + pidot[1])^2
t3 = (pobs*pexp-2*pexp+pobs)^2
vhat = (t1 + t2*(1-pobs)^2 -t3)/(n*(1-pexp)^4)
se=sqrt(vhat)
return(c(kappa,se))
}
class.sum=function(truth,predicted){
xt=table(truth,round(predicted+0.000001))
pcc=round(100*sum(diag(xt))/sum(xt),2)
spec=round(100*xt[1,1]/sum(xt[1,]),2)
sens=round(100*xt[2,2]/sum(xt[2,]),2)
kap=round(kappa(xt)[1],4)
au=round(roc.area(truth,predicted)$A,4)
return(cbind(c("Percent Correctly Classified = ","Specificity = ","Sensitivity = ","Kappa =","AUC= "),c(pcc,spec,sens,kap,au)))
}
# LOO CV Confusion Matrix
table(health$HeartDiseaseorAttack, health_lda$class)
222055+5895
227950/253680
class.sum(health$HeartDiseaseorAttack, health_lda$posterior[, 2])
# 10 fold CV
health_lda_xval <- rep(0, length = nrow(health))
x<- rep(1:10, length = nrow(health))
x <- sample(x)
for(i in 1:10){
train <- health[x != i, ]
test <- health[x == i, ]
glub <- lda(HeartDiseaseorAttack ~ . , data = train)
health_lda_xval[x == i] <- predict(glub, test)$class
}
table(health$HeartDiseaseorAttack, health_lda_xval)
222668+5893
228561/253680
## QDA ##
health_qda <- qda(HeartAttackorDisease ~ . , CV = TRUE, data = health)
## QDA ##
health_qda <- qda(HeartDiseaseorAttack ~ . , CV = TRUE, data = health)
# new data with transformed variables
health2 <- health[c(1:4, 6:15, 18:23, 25, 28)]
## LDA ##
health_lda <- lda(HeartDiseaseorAttack ~  , CV = TRUE, data = health2)
## LDA ##
health_lda <- lda(HeartDiseaseorAttack ~ . , CV = TRUE, data = health2)
# LOO CV Confusion Matrix
table(health2$HeartDiseaseorAttack, health_lda$class)
222590+5871
228461/253680
table(health2$HeartDiseaseorAttack, health_lda_xval)
222668+5893
228561/253680
## QDA ##
health_qda <- qda(HeartDiseaseorAttack ~ . , CV = TRUE, data = health2)
table(health2$HeartDiseaseorAttack, health_qda$class)
class.sum(health2$HeartDiseaseorAttack, health_qda$posterior[, 2])
151819+19760
171579/253680
# 10 fold CV
health_qda_xval_class <- rep(0, nrow(health2))
health_qda_xval_posterior <- rep(0, nrow(health2))
xvs <- rep(1:10, length = nrow(health2))
xvs <- sample(xvs)
for(i in 1:10){
train <- health2[xvs != i, ]
test <- health2[xvs == i, ]
glub <- qda(HeartDiseaseorAttack ~ . , data = train)
health_qda_xval_posterior[xvs == i] <- predict(glub, test)$posterior[, 2]
health_qda_xval_class[xvs == i] <- predict(glub, test)$class
}
table(health2$HeartDiseaseorAttack, health_qda_xval_class)
151833+19762
171595/253680
library(caTools)
# Train and Test Sets
health2_split <- sample.split(health2, SplitRatio = 0.3)
health_train <- subset(health2, health2_split == TRUE)
health_test <- subset(health2, health2_split == FALSE)
## LDA ##
health_lda <- lda(HeartDiseaseorAttack ~ . , CV = TRUE, data = health_test)
# LOO CV Confusion Matrix
table(health_test$HeartDiseaseorAttack, health_lda$class)
161901+4298
166199/184494
# 10 fold CV
health_lda_xval <- rep(0, length = nrow(health_test))
x <- rep(1:10, length = nrow(health_test))
x <- sample(x)
for(i in 1:10){
train <- health_test[x != i, ]
test <- health_test[x == i, ]
glub <- lda(HeartDiseaseorAttack ~ . , data = train)
health_lda_xval[x == i] <- predict(glub, test)$class
}
table(health_test$HeartDiseaseorAttack, health_lda_xval)
161944+4297
166241/184494
health_test <- subset(health2, health2_split == TRUE)
health_train <- subset(health2, health2_split == FALSE)
## LDA ##
health_lda <- lda(HeartDiseaseorAttack ~ . , CV = TRUE, data = health_train)
# LOO CV Confusion Matrix
table(health_train$HeartDiseaseorAttack, health_lda$class)
161887+4295
166182/184494
# 10 fold CV
health_lda_xval <- rep(0, length = nrow(health_train))
x <- rep(1:10, length = nrow(health_train))
x <- sample(x)
for(i in 1:10){
train <- health_train[x != i, ]
test <- health_train[x == i, ]
glub <- lda(HeartDiseaseorAttack ~ . , data = train)
health_lda_xval[x == i] <- predict(glub, test)$class
}
table(health_train$HeartDiseaseorAttack, health_lda_xval)
161936+4311
166247/184494
# Test Set Prediction
table(health_test$HeartDiseaseorAttack, predict(health_lda, health_test)$class)
predict(health_lda, health_test)$class
predict(glub, test)$class
class(health_test)
# Test Set Prediction
table(health_test$HeartDiseaseorAttack, predict(health_lda, health_test)$class)
## QDA ##
health_qda <- qda(HeartDiseaseorAttack ~ . , CV = TRUE, data = health_train)
# LOO CV Confusion Matrix
table(health_train$HeartDiseaseorAttack, health_qda$class)
112028+14244
126272/184494
# 10 fold CV
health_qda_xval_class <- rep(0, nrow(health_train))
health_qda_xval_posterior <- rep(0, nrow(health_train))
xvs <- rep(1:10, length = nrow(health_train))
xvs <- sample(xvs)
for(i in 1:10){
train <- health_train[xvs != i, ]
test <- health_train[xvs == i, ]
glub <- qda(HeartDiseaseorAttack ~ . , data = train)
health_qda_xval_posterior[xvs == i] <- predict(glub, test)$posterior[, 2]
health_qda_xval_class[xvs == i] <- predict(glub, test)$class
}
table(health_train$HeartDiseaseorAttack, health_qda_xval_class)
112013+14250
126263/184494
# 10 fold CV
health_qda_xval_class <- rep(0, nrow(health_train))
health_qda_xval_posterior <- rep(0, nrow(health_train))
xvs <- rep(1:10, length = nrow(health_train))
xvs <- sample(xvs)
for(i in 1:10){
train <- health_train[xvs != i, ]
test <- health_train[xvs == i, ]
glub <- qda(HeartDiseaseorAttack ~ . , data = train)
health_qda_xval_posterior[xvs == i] <- predict(glub, test)$posterior[, 2]
health_qda_xval_class[xvs == i] <- predict(glub, test)$class
}
table(health_train$HeartDiseaseorAttack, health_qda_xval_class)
111983+14246
126229/184494
# Test Set Prediction
table(health_test$HeartDiseaseorAttack, predict(health_qda, health_test)$class)
## PCA ##
S <- cov(health2)
?cov
## PCA ##
health_mat <- as.matrix(health2)
S <- cov(health_mat)
head(health_mat)
R <- cor(health2)
R <- cor(health_mat)
## PCA ##
health_num <- as.numeric(health2)
class(health2)
?xtabs
?prcomp
install.packages("FactoMineR")
library(FactoMineR)
## PCA ##
PCA(health2)
library(klaR)
## K-NN ##
health_knn10 <- sknn(as.factor(HeartDiseaseorAttack) ~ . , data = health_train,
kn = 10)
set.seed(96570)
health_knn_xval_class <- rep(0, nrow(health_train))
health_knn_xval_posterior <- rep(0, nrow(health_train))
xvs <- rep(1:10, length = nrow(health_train))
xvs<- sample(xvs)
for(i in 1:10){
train <- health_train[xvs!=i,]
test <- health_train[xvs==i,]
glub <- sknn(as.factor(HeartDiseaseorAttack) ~ . , data = train, kn = 10)
health_knn_xval_posterior[xvs==i] <- predict(glub, test)$posterior[,2]
health_knn_xval_class[xvs==i] <- predict(glub, test)$class
}
# Test Accuracy
table(health_test$HeartDiseaseorAttack, predict(health_knn10, health_test)$class)
